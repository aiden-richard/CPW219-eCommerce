@model BookListViewModel
@{
    ViewData["Title"] = "Book List";

    string NextSortDir(string field) => Model.SortField == field && Model.SortDirection == "asc" ? "desc" : "asc";
    string SortIcon(string field)
    {
        if (Model.SortField != field) return "";
        return Model.SortDirection == "asc" ? "bi-caret-up-fill" : "bi-caret-down-fill";
    }
}

<h2 class="mb-4">Book Listings</h2>

<div class="d-flex flex-wrap gap-2 mb-3">
    <form asp-action="Index" method="get" class="d-flex" role="search">
        <input type="hidden" name="sortField" value="@Model.SortField" />
        <input type="hidden" name="sortDir" value="@Model.SortDirection" />
        <input name="searchTerm" value="@Model.SearchTerm" class="form-control me-2" type="search" placeholder="Search title or author" aria-label="Search" />
        <button class="btn btn-primary" type="submit">Search</button>
        @if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
        {
            <a asp-action="Index" class="btn btn-link">Clear</a>
        }
    </form>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (Model.Books == null || !Model.Books.Any())
{
    <div class="alert alert-info">No books found.</div>
}
else
{
    <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
            <tr>
                <th>
                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-page="1" asp-route-sortField="Title" asp-route-sortDir="@NextSortDir("Title")" asp-route-searchTerm="@Model.SearchTerm">
                        Title <i class="bi @SortIcon("Title")"></i>
                    </a>
                </th>
                <th class="text-end">
                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-page="1" asp-route-sortField="Price" asp-route-sortDir="@NextSortDir("Price")" asp-route-searchTerm="@Model.SearchTerm">
                        Price <i class="bi @SortIcon("Price")"></i>
                    </a>
                </th>
                <th style="width: 1%;"></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var book in Model.Books)
        {
            <tr>
                <td>@book.Title<br /><small class="text-muted">@book.Author</small></td>
                <td class="text-end">@book.Price.ToString("C")</td>
                <td class="text-nowrap">
                    <a asp-action="Edit" asp-route-id="@book.Id" class="btn btn-primary btn-sm">Edit</a>
                    <a asp-action="Delete" asp-route-id="@book.Id" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <div class="d-flex align-items-center justify-content-between flex-wrap mb-2">
        <nav aria-label="Book pagination" class="mb-2 mb-sm-0">
            @if (Model.TotalPages > 1)
            {
                var startPage = Math.Max(1, Model.CurrentPage - 2);
                var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                // Adjust window if near beginning or end to always show up to 5 pages when possible
                if (endPage - startPage < 4)
                {
                    if (startPage == 1)
                    {
                        endPage = Math.Min(Model.TotalPages, startPage + 4);
                    }
                    else if (endPage == Model.TotalPages)
                    {
                        startPage = Math.Max(1, endPage - 4);
                    }
                }
                <ul class="pagination mb-0">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="1" asp-route-sortField="@Model.SortField" asp-route-sortDir="@Model.SortDirection" asp-route-searchTerm="@Model.SearchTerm">First</a>
                    </li>
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-sortField="@Model.SortField" asp-route-sortDir="@Model.SortDirection" asp-route-searchTerm="@Model.SearchTerm">Previous</a>
                    </li>

                    @if (startPage > 1)
                    {
                        <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="1" asp-route-sortField="@Model.SortField" asp-route-sortDir="@Model.SortDirection" asp-route-searchTerm="@Model.SearchTerm">1</a></li>
                        @if (startPage > 2)
                        {
                            <li class="page-item disabled"><span class="page-link">&hellip;</span></li>
                        }
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-sortField="@Model.SortField" asp-route-sortDir="@Model.SortDirection" asp-route-searchTerm="@Model.SearchTerm">@i</a>
                        </li>
                    }

                    @if (endPage < Model.TotalPages)
                    {
                        if (endPage < Model.TotalPages - 1)
                        {
                            <li class="page-item disabled"><span class="page-link">&hellip;</span></li>
                        }
                        <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages" asp-route-sortField="@Model.SortField" asp-route-sortDir="@Model.SortDirection" asp-route-searchTerm="@Model.SearchTerm">@Model.TotalPages</a></li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-sortField="@Model.SortField" asp-route-sortDir="@Model.SortDirection" asp-route-searchTerm="@Model.SearchTerm">Next</a>
                    </li>
                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages" asp-route-sortField="@Model.SortField" asp-route-sortDir="@Model.SortDirection" asp-route-searchTerm="@Model.SearchTerm">Last</a>
                    </li>
                </ul>
            }
        </nav>
        <a asp-action="Create" asp-controller="Book" class="btn btn-primary mb-2 mb-sm-0">
            <i class="bi bi-plus-circle"></i> Create New Book
        </a>
    </div>
    <p class="text-muted small mb-0">Showing page @Model.CurrentPage of @Model.TotalPages (@Model.TotalItems total books, @Model.PageSize per page) - Sorted by @Model.SortField (@Model.SortDirection) @if(!string.IsNullOrWhiteSpace(Model.SearchTerm)){<text>- Filter: "@Model.SearchTerm"</text>}</p>
}